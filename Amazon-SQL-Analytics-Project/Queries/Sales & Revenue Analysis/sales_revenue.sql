/*
1. Top Selling Products
Query the top 10 products by total sales value.
Challenge: Include product name, total quantity sold, and total sales value.
*/


SELECT p.product_name,SUM(o.quantity) AS total_quantity_sold, 
ROUND(SUM(o.quantity * o.price_per_unit)::numeric, 2) AS total_sales_value
FROM products p
JOIN order_items o
ON p.product_id = o.product_id
GROUP BY 1
ORDER BY 3 DESC
LIMIT 10;



/*
2. Revenue by Category
Calculate total revenue generated by each product category.
Challenge: Include the percentage contribution of each category to total revenue.
*/

SELECT c.category_name, 
ROUND(SUM(o.quantity * o.price_per_unit)::numeric, 2) AS total_revenue,
SUM(o.quantity*o.price_per_unit)*100/SUM(SUM(o.quantity*o.price_per_unit))OVER() AS percentage_contribution
FROM products p
JOIN category c
ON c.category_id=p.category_id
JOIN order_items o
ON o.product_id=p.product_id
GROUP BY 1
ORDER BY 2 DESC;




/*
3. Average Order Value (AOV)
Compute the average order value for each customer.
Challenge: Include only customers with more than 5 orders.
*/


SELECT c.customer_id,
CONCAT(c.first_name, ' ',c.last_name) AS full_name,
SUM(oi.quantity * oi.price_per_unit)/COUNT(o.order_id) AS average_value,
COUNT(o.order_id) AS total_order
FROM customers c
JOIN orders o 
ON c.customer_id=o.customer_id
JOIN order_items oi
ON o.order_id=oi.order_id
GROUP BY 1
HAVING COUNT(o.order_id)>5;



/*
4. Monthly Sales Trend
Query monthly total sales over the years.
Challenge: Display the sales trend, grouping by month, return current_month sale, last month sale!
*/


WITH T AS 
(
SELECT Extract( MONTH FROM o.order_date) as month,
Extract(YEAR FROM o.order_date) as year,
ROUND(SUM(oi.quantity * oi.price_per_unit)::numeric, 2) as monthly_sales
FROM orders o 
JOIN order_items oi
on o.order_id=oi.order_id
GROUP BY 1,2
ORDER BY 2,1
)

SELECT year,month,monthly_sales,
LAG(monthly_sales)OVER(ORDER BY year,month) as last_month_sale
FROM T;


